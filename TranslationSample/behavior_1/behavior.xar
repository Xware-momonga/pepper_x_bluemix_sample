<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="AddLibPath" id="15" localization="8" tooltip="Libへのパスを追加します" x="152" y="70"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import os
import sys

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.framemanager = ALProxy('ALFrameManager')
        self.folderName = None

    def onUnload(self):
        self.framemanager = None
        if self.folderName and self.folderName in sys.path:
            sys.path.remove(self.folderName)
        self.folderName = None

    def onInput_onStart(self):
        """
        : > INPUT
        :
        : カスタムモジュールをインポーツするためにライブラリーをシステムパスに追加します。
        """
        self.folderName = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), '../lib')

        # パスを追加してカスタムモジュールをインポートできるようになります。
        if self.folderName not in sys.path:
            sys.path.append(self.folderName)

        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="ボックス動作の終了時に信号を送る。" id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" /></Box><Box name="ShowApp" id="3" localization="8" tooltip="Loads the application on the tablet, if it exists, and displays the webview.&#x0A;&#x0A;V1.0.0&#x0A;" x="434" y="33"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tabletService = ALProxy('ALTabletService')
        self.appName = self.packageUid()

        self.isRunning = False

    def onUnload(self):
        self.tabletService = None
        self.appName = None

        self.isRunning = False

    def onInput_onStart(self):
        """
        : > INPUT
        : アプリのindex.htmlを表示します（初期化時のみに発生します）
        """
        if not self.isRunning:
            self.isRunning = True
            self.tabletService.loadApplication(self.appName)
            self.tabletService.showWebview()
            self.onTabletInitialised()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onTabletInitialised" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" /></Box><Box name="TranslationSamples" id="1" localization="8" tooltip="" x="440" y="189"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Translate EN -&gt; *" id="4" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="196" y="227"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import json

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        from watson_developer_cloud import LanguageTranslatorV2

        self.memory = ALProxy('ALMemory')
        self.languageTranslator = LanguageTranslatorV2(
            username=self.getParameter('Username'),
            password=self.getParameter('Password')
        )

    def onUnload(self):
        self.memory = None
        self.languageTranslator = None

    def onInput_onStart(self):
        """
        : 引数の文字列textを対象言語に翻訳してHTMLに表示します
        """
        from watson_developer_cloud import LanguageTranslatorV2

        # 翻訳する文字列を表示します
        text = self.getParameter('Text to Translate')
        self.memory.raiseEvent('translation_sample/text_input', text)
        self.memory.raiseEvent('translation_sample/text_output', '')

        # 対象言語の最初２文字のみを利用します
        targetLanguage = self.getParameter('Target Language')[:2]

        # 翻訳するコンテンツを送信します
        translation = self.languageTranslator.translate(
            text,
            source='en',
            target=targetLanguage
        )

        # 翻訳結果をHTMLに表示します
        self.memory.raiseEvent('translation_sample/text_output', translation.encode('utf-8'))
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Parameter name="Target Language" inherits_from_parent="0" content_type="3" value="ar-Arabic" default_value="de-German" custom_choice="0" tooltip="" id="5"><Choice value="ar-Arabic" /><Choice value="de-German" /><Choice value="es-Spanish" /><Choice value="fr-French" /><Choice value="it-Italian" /><Choice value="ja-Japanese" /><Choice value="ko-Korean" /><Choice value="pt-Portuguese" /></Parameter><Parameter name="Text to Translate" inherits_from_parent="0" content_type="3" value="Hello" default_value="" custom_choice="0" tooltip="" id="6" /><Parameter name="Username" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="7" /><Parameter name="Password" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="8" /></Box><Box name="Translate JP -&gt; *" id="5" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="201" y="367"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import json

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        from watson_developer_cloud import LanguageTranslatorV2

        self.memory = ALProxy('ALMemory')
        self.languageTranslator = LanguageTranslatorV2(
            username=self.getParameter('Username'),
            password=self.getParameter('Password')
        )

    def onUnload(self):
        self.memory = None
        self.languageTranslator = None

    def onInput_onStart(self):
        """
        : 日本語の文字列を英語に翻訳して、英語から対象言語に翻訳します。
        """
        # 翻訳する文字列を表示します
        jpText = self.getParameter('Text to Translate')
        self.memory.raiseEvent('translation_sample/text_input', jpText)
        self.memory.raiseEvent('translation_sample/text_output', '')

        # 英訳を先に取得します
        engText = self._getTranslation(jpText, 'ja', 'en')

        # 翻訳するコンテンツを送信します
        target = self.getParameter('Target Language')[:2]
        translation = self._getTranslation(engText, 'en', target)

        # 翻訳結果をHTMLに表示します
        self.memory.raiseEvent('translation_sample/text_output', translation.encode('utf-8'))
        self.onStopped()

    def _getTranslation(self, text, source, target):
        """
        : textをsource言語からtarget言語に翻訳して返します。
        """

        # 翻訳するコンテンツを送信します
        translation = self.languageTranslator.translate(
            text,
            source=source,
            target=target
        )

        return translation]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Parameter name="Target Language" inherits_from_parent="0" content_type="3" value="ko-Korean" default_value="it-Italian" custom_choice="0" tooltip="" id="5"><Choice value="ar-Arabic" /><Choice value="de-German" /><Choice value="es-Spanish" /><Choice value="fr-French" /><Choice value="it-Italian" /><Choice value="ko-Korean" /><Choice value="pt-Portuguese" /></Parameter><Parameter name="Text to Translate" inherits_from_parent="0" content_type="3" value="今日の天気はどうですか" default_value="" custom_choice="0" tooltip="" id="6" /><Parameter name="Username" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="7" /><Parameter name="Password" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="8" /></Box><Box name="Translate JP -&gt; EN" id="6" localization="8" tooltip="This box contains a basic python script and can be used to create any python script box you would like.&#x0A;&#x0A;To edit its script, double-click on it." x="192" y="101"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import json

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        from watson_developer_cloud import LanguageTranslatorV2

        self.memory = ALProxy('ALMemory')
        self.languageTranslator = LanguageTranslatorV2(
            username=self.getParameter('Username'),
            password=self.getParameter('Password')
        )

    def onUnload(self):
        self.memory = None
        self.languageTranslator = None

    def onInput_onStart(self):
        """
        : 引数の文字列textを対象言語に翻訳してHTMLに表示します
        """
        from watson_developer_cloud import LanguageTranslatorV2

        # 翻訳する文字列を表示します
        text = self.getParameter('Text to Translate')
        self.memory.raiseEvent('translation_sample/text_input', text)
        self.memory.raiseEvent('translation_sample/text_output', '')

        # 翻訳するコンテンツを送信します
        translation = self.languageTranslator.translate(
            text,
            source='ja',
            target='en'
        )

        # 翻訳結果をHTMLに表示します
        self.memory.raiseEvent('translation_sample/text_output', translation.encode('utf-8'))
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="" id="4" /><Parameter name="Text to Translate" inherits_from_parent="0" content_type="3" value="こんにちは" default_value="" custom_choice="0" tooltip="" id="5" /><Parameter name="Username" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="6" /><Parameter name="Password" inherits_from_parent="0" content_type="3" value="" default_value="" custom_choice="0" tooltip="" id="7" /></Box><Box name="Comment" id="1" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="330" y="113"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("日本語から英語に翻訳します")]]></content></script><pluginContent><text><![CDATA[日本語から英語に翻訳します]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /></Box><Box name="Comment (1)" id="2" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="332" y="237"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("英語から選択した言語に翻訳します")]]></content></script><pluginContent><text><![CDATA[英語から選択した言語に翻訳します]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /></Box><Box name="Comment (2)" id="3" localization="8" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="342" y="366"><bitmap>media/images/box/box-script.png</bitmap><script language="4"><content><![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("日本語から英語を翻訳して、英訳を用いて選択した言語に翻訳します")]]></content></script><pluginContent><text><![CDATA[日本語から英語を翻訳して、英訳を用いて選択した言語に翻訳します]]></text></pluginContent><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /></Box></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Link inputowner="15" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="3" indexofinput="2" outputowner="15" indexofoutput="3" /><Link inputowner="1" indexofinput="2" outputowner="15" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>